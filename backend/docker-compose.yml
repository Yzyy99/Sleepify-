version: '3'

services:
  db:
    image: postgres:13
    container_name: db
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=8ARjkgy170cWVhIK
    volumes:
      - /app/postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  app:
    image: app
    container_name: app
    build: .
    env_file:
      - .env
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - model_volume:/app/models
    command: >
      sh -c " python manage.py makemigrations app forum music &&
             python manage.py migrate && 
             python manage.py collectstatic --noinput &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    expose: 
      - "8000"
    depends_on:
      - db
      - redis
    networks:
      - mynetwork

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8000:8000"
      - "443:443"
    volumes:
      - ./nginx/app.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/staticfiles
      - ./cert:/cert
    depends_on:
      - app
    networks:
      - mynetwork

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - mynetwork
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - /usr/bin/redis/log.txt:/usr/bin/log.txt
    command: redis-server /usr/local/etc/redis/redis.conf
volumes:
  postgres_data:
  model_volume:
  static_volume:

networks:
  mynetwork:
